name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: read

jobs:
  lint:
    name: Lint (golangci-lint)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.x'
          check-latest: true

      - name: Cache Go build and mod
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Format check (gofmt)
        run: make fmtcheck

      - name: Vet
        run: make vet

  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        go-version: [ '1.25.x' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true

      - name: Cache Go build and mod
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-
            ${{ runner.os }}-go-

      - name: go mod tidy
        run: go mod tidy

      - name: Vet
        run: make vet

      - name: Build (no-op) and Test
        run: make test

